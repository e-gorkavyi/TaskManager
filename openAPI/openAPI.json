{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "/",
      "description": "Default Server URL"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication management controller"
    },
    {
      "name": "Comments",
      "description": "Task's comments APIs"
    },
    {
      "name": "Tasks",
      "description": "Tasks APIs"
    }
  ],
  "paths": {
    "/api/task/updateTask": {
      "post": {
        "tags": [
          "Tasks",
          "POST"
        ],
        "summary": "Update a task.",
        "description": "Task update include all main fields. Available for task creator only. Bearer tag authentication requires.",
        "operationId": "updateTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/updateTaskStatus": {
      "post": {
        "tags": [
          "Tasks",
          "POST"
        ],
        "summary": "Update a task status.",
        "description": "Update s task status field. Available for task creator and task performer. Bearer tag authentication requires.",
        "operationId": "updateTaskStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/updateTaskPerformer": {
      "post": {
        "tags": [
          "Tasks",
          "POST"
        ],
        "summary": "Update a task performer.",
        "description": "Update s task performer (performer user ID). Available for task creator only. Bearer tag authentication requires.",
        "operationId": "updateTaskPerformer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformerDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/createTask": {
      "post": {
        "tags": [
          "Tasks",
          "POST"
        ],
        "summary": "Create a task.",
        "description": "Task creation with required task header and task body (task description). Bearer tag authentication requires.",
        "operationId": "createTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/api/comment/create": {
      "post": {
        "tags": [
          "POST",
          "Comments"
        ],
        "summary": "Create a comment for a task.",
        "description": "Create new comment related to task by task ID. Bearer tag authentication requires.",
        "operationId": "createComment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "POST",
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Put user basic user information.\nA password is considered valid if all the following constraints are satisfied:\nIt contains at least 8 characters.\nIt contains at least one digit.\nIt contains at least one upper case alphabet.\nIt contains at least one lower case alphabet.\nIt contains at least one special character which includes @#$%^&+=.\nIt doesnâ€™t contain any white space.",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/authenticate": {
      "post": {
        "tags": [
          "POST",
          "Authentication"
        ],
        "summary": "Authenticate registered user.",
        "description": "The Bearer tag is returned in the response.",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/getTasksByPerformerId": {
      "get": {
        "tags": [
          "Tasks",
          "GET"
        ],
        "summary": "Get a task by performer.",
        "description": "Returns task by performer (user) ID wint related comments. Bearer tag authentication requires.",
        "operationId": "getTasksByPerformerId",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/getTasksByCreatorId": {
      "get": {
        "tags": [
          "Tasks",
          "GET"
        ],
        "summary": "Get a task by creator.",
        "description": "Returns task by creator (user) ID with related comments. With pagination. Bearer tag authentication requires.",
        "operationId": "getTasksByCreatorId",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/getTaskById": {
      "get": {
        "tags": [
          "Tasks",
          "GET"
        ],
        "summary": "Get a task.",
        "description": "Returns task by task ID with related comments. Bearer tag authentication requires.",
        "operationId": "getTaskById",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/getAllTasks": {
      "get": {
        "tags": [
          "Tasks",
          "GET"
        ],
        "summary": "Get tasks list.",
        "description": "Returns list of all tasks with related comments. With pagination. Bearer tag authentication requires.",
        "operationId": "getAllTasks",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/comment/getByTaskId": {
      "get": {
        "tags": [
          "Comments",
          "GET"
        ],
        "summary": "Get comments related to a task.",
        "description": "Returns comments list where comments related to a task. In request task ID needed. Bearer tag authentication requires.",
        "operationId": "getCommentsByTaskId",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageComment"
                }
              }
            }
          }
        }
      }
    },
    "/api/task/deleteById": {
      "delete": {
        "tags": [
          "DELETE",
          "Tasks"
        ],
        "summary": "Delete task.",
        "description": "Task deletion. With task deletes all comments related on this task. Available for task creator only. Bearer tag authentication requires.",
        "operationId": "deleteById",
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TaskDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "header": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAIT",
              "IN_PROGRESS",
              "DONE"
            ]
          },
          "priority": {
            "type": "string",
            "enum": [
              "HIGH",
              "MIDDLE",
              "LOW"
            ]
          },
          "performerId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StatusDTO": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAIT",
              "IN_PROGRESS",
              "DONE"
            ]
          }
        }
      },
      "PerformerDTO": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int64"
          },
          "performerId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "commentBody": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "taskId": {
            "type": "integer",
            "format": "int64"
          },
          "commenter": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "header": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAIT",
              "IN_PROGRESS",
              "DONE"
            ]
          },
          "priority": {
            "type": "string",
            "enum": [
              "HIGH",
              "MIDDLE",
              "LOW"
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "performer": {
            "$ref": "#/components/schemas/User"
          },
          "comments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstname": {
            "type": "string"
          },
          "middlename": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "CommentDTO": {
        "type": "object",
        "properties": {
          "commentBody": {
            "type": "string"
          },
          "taskId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "PageTask": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "PageComment": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      }
    }
  }
}